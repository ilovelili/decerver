;Linked List Type
{
	(include "b4cf9d82ca004cd31b7112d1f4e003de928ed7157e53f1dde82fa5708dcf7ebc.lll")
	(include "59c6ee9af9f0ae512131c770a26e82f020c734c5c96c02773f1797e9aa084357.lll")

	;Definition of Linked list form
	;@vari(name) : "linkedlist"

	;+ stdVSsize +1 : TailSlot
	;+ stdVSsize +2 : HeadSlot
	;+ stdVSsize +3 : Length of list

	(def 'llbase (base) (+ base stdVSsize))
	(def 'IllTailSlot (base) (llllTailSlot (llbase base)))
	(def 'IllHeadSlot (base) (llllHeadSlot (llbase base)))
	(def 'IllLenSlot (base) (llllLenSlot (llbase base)))

	;Linked list entry
	;Note: keys can only be 20 bytes maximum
	;@(+ vari(name) (+ (* key (EXP 0x100 3)) (EXP 0x100 2)) : mainvalue
	;+1 : Previous Entry
	;+2 : Next Entry

	;---------------------------------------------------------------------------------------------

	(def 'IllCTS (base key) (+ base (+ (EXP 0x100 2) (* (MOD key (EXP 0x100 20)) (EXP 0x100 3)))))
	(def 'InllCTS (base key) (+ base (+ (EXP 0x100 2) (* (DIV key (EXP 0x100 12)) (EXP 0x100 3)))))
	(def 'IllPrevSlot (base key) (llllPrevSlot slot))
	(def 'IllNextSlot (base key) (llllNextSlot slot))

	(def 'IllInit (base name addperm rmperm modperm)
		{
			(when (= @@base 0x0)
				{
					[[base]]"linkedlist"
					[[(IvnSlot base)]]name
					[[(IvapSlot base)]]addperm
					[[(IvrpSlot base)]]rmperm
					[[(IvmpSlot base)]]modperm
				}
			)
		}
	)

	(def 'IllAddLink (base slot value) (when (= @@base "linkedlist") (llllAddLink (llbase base) slot value)))

	(def 'IllRmLink (base slot) (when (= @@base "linkedlist") (llllRmLink (llbase base) slot)))

	(def 'IllSet (base slot value) (when (= @@base "linkedlist") (llllSet (llbase base) slot 0 value)))

	(def 'IllStore (base slot mem membool)
		{
			(if membool
				(IllSet base slot @mem)
				(IllSet base slot (calldataload mem))
			)
		}
	)
	(def 'IllGet (base slot) (llllGet slot 0))
	(def 'IllLoad (base slot mem) (llllLoad slot 0 mem))


	;Externals
	;-------------------------------------------------------------
	(def 'llCTS (name key) (IllCTS (vari name) key))
	(def 'llprevslot (name key) (Illprevslot (vari name) key))
	(def 'llnextslot (name key) (Illnextslot (vari name) key))

	(def 'llTailSlot (name) (IllTailSlot (vari name)))
	(def 'llHeadSlot (name) (IllHeadSlot (vari name)))
	(def 'llLenSlot (name) (IllLenSlot (vari name)))

	(def 'llInit (name addperm rmperm modperm) (IllInit (vari name) name addperm rmperm modperm))
	(def 'llInit (name) (IllInit (vari name) name "none" "none" "none"))

	(def 'llAddLink (name key value) (IllAddLink (vari name) (llCTS name key) value))
	(def 'llRmLink (name key) (IllRmLink (vari name) (llCTS name key)))

	(def 'llGet (name key) (IllGet (vari name) (llCTS name key)))
	(def 'llLoad (name key mem) (IllLoad (vari name) (llCTS name key) mem))

	(def 'llSet (name key value) (IllSet (vari name) (llCTS name key) value))
	(def 'llStore (name key mem membool) (IllStore (vari name) (llCTS name key) mem membool))
}
